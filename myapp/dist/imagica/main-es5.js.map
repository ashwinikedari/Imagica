{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/header/header.component.html","/./src/app/list-image/list-image.component.html","/./src/app/post-image/post-image.component.html","/./src/app/app-routing.module.ts","/./src/app/app-service.service.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/header/header.component.css","/./src/app/header/header.component.ts","/./src/app/list-image/list-image.component.css","/./src/app/list-image/list-image.component.ts","/./src/app/post-image/post-image.component.css","/./src/app/post-image/post-image.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,sJ;;;;;;;;;;;ACAA,8xB;;;;;;;;;;;ACAA,0DAA0D,2H;;;;;;;;;;;ACA1D,wsCAAwsC,eAAe,oY;;;;;;;;;;;;;;;;;;;;ACA9qC;AACc;AACgB;AACA;AAGvE,IAAM,MAAM,GAAW;IAErB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mFAAkB,EAAE;IACnD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAkB,EAAE;CAC5C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AChBc;AACO;AACS;AAK3D;IAGE,2BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IAEiB,CAAC;IAE/C,qCAAS,GAAT,UAAU,QAAW;QACnB,+BAA+B;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC;IAED,qCAAS,GAAT;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC;IAC9D,CAAC;;gBAT+B,+DAAU;;IAH/B,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,iBAAiB,CAa7B;IAAD,wBAAC;CAAA;AAb6B;;;;;;;;;;;;ACP9B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,SAAS,CAAC;IACpB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACwB;AAO5C;AAC0B;AACK;AACa;AACf;AACI;AA6B5D;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAkB;gBAClB,mFAAkB;gBAClB,yEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,kEAAmB;gBACnB,+DAAa;gBACb,sEAAgB;gBAChB,kEAAgB;aAEjB;YACD,OAAO,EAAE;gBACP,gEAAc;gBACd,+DAAa;gBACb,iEAAe;gBACjB,kEAAgB;aAEf;YACD,SAAS,EAAE,CAAC,sEAAiB,CAAC;YAC9B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9CtB,sBAAsB,qBAAqB,eAAe,cAAc,GAAG,OAAO,0BAA0B,iBAAiB,GAAG,aAAa,wBAAwB,2BAA2B,GAAG,+CAA+C,+iB;;;;;;;;;;;;;;;;;ACAxM;AAO1C;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,oJAAsC;;SAEvC,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACP5B,+BAA+B,oBAAoB,OAAO,+CAA+C,+T;;;;;;;;;;;;;;;;;;ACAvD;AACS;AAO3D;IAGE,4BAAoB,UAA4B;QAA5B,eAAU,GAAV,UAAU,CAAkB;QADhD,cAAS,GAAY,EAAE,CAAC;IAC4B,CAAC;IAErD,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,sCAAS,GAAT;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YACxC,IAAG,GAAG,CAAC,MAAM,GAAC,CAAC,EAAC;gBACd,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBAC3B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBAC5C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBAC5C;iBACF;aACA;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gBAhB8B,sEAAiB;;IAHrC,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,gKAA0C;;SAE3C,CAAC;OACW,kBAAkB,CAoB9B;IAAD,yBAAC;CAAA;AApB8B;;;;;;;;;;;;ACR/B,2CAA2C,2BAA2B,OAAO,+BAA+B,qBAAqB,uBAAuB,OAAO,gCAAgC,qBAAqB,OAAO,+CAA+C,+kB;;;;;;;;;;;;;;;;;;;;ACAxN;AAC0C;AACjC;AAClB;AAOzC;IAIE,4BAAoB,WAAwB,EAAU,UAA4B,EAAS,MAAc;QAArF,gBAAW,GAAX,WAAW,CAAa;QAAU,eAAU,GAAV,UAAU,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QADzG,SAAI,GAAG,EAAE,CAAC;IACmG,CAAC;IAE9G,qCAAQ,GAAR;QAEE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACvD,CAAC,CAAC;IACL,CAAC;IACD,uCAAU,GAAV,UAAW,IAAI;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACC,sBAAI,sCAAM;aAAV;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAc,CAAC;QAChD,CAAC;;;OAAA;IAAA,CAAC;IAEA,0CAAa,GAAb,UAAc,KAAK;QAAnB,iBA8BC;QA5BC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/C,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;gBACpC,uDAAuD;gBACvD;;;mBAGG;gBAEH,6BAA6B;gBAC3B,IAAI,IAAI,GAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;oBAE1B,uCAAuC;oBACvC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC;wBAEhC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAE,iCAAiC;qBAC9D,CAAC,CAAC,CAAC;gBAEF,CAAC;gBAED,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI;aAEL;SACF;IACH,CAAC;IAED,wCAAW,GAAX,UAAY,KAAK;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD,wCAAW,GAAX;QAAA,iBAcC;QAbC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO;SACR;aAAI;YACH,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACvD,IAAG,GAAG,EAAC;oBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;YAEH,CAAC,CAAC,CAAC;SACJ;QACJ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;;gBAhEgC,0DAAW;gBAAqB,sEAAiB;gBAAiB,sDAAM;;IAJ9F,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,gKAA0C;;SAE3C,CAAC;OACW,kBAAkB,CAqE9B;IAAD,yBAAC;CAAA;AArE8B;;;;;;;;;;;;;ACV/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,2BAA2B;CACpC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<app-header></app-header>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n      <span class=\\\"span\\\">Imagica - Image File Uploader by Ashwini Kedari</span>\\n  </mat-toolbar-row>\\n  <mat-toolbar-row>\\n      <span class=\\\"span\\\">\\n          <span>\\n            <table>\\n              <tr>\\n                <td style=\\\"padding: 20px\\\"> \\n                  <!-- Default Image List -->  \\n                  <a routerLink=\\\"/\\\">Images List</a>\\n                </td>\\n                <td style=\\\"padding: 20px\\\">\\n                  <!-- New Image Link -->\\n                    <a mat-button routerLink=\\\"/newimage\\\" routerLinkActive=\\\"mat-accent\\\">New Image</a>\\n                </td>\\n              </tr>\\n            </table>\\n            </span>\\n\\n      </span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\"","module.exports = \"\\n<div  *ngFor=\\\"let photo of imageList; \\\">\\n    \\n        <img [src]=\\\"photo\\\" class=\\\"card-img-top\\\" alt=\\\"Image Preview\\\" height=\\\"200\\\">\\n       \\n  \\n</div>\"","module.exports = \"<!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"onSaveImage()\\\" *ngIf=\\\"!isLoading\\\">\\n\\n\\n         <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\"> \\n        <div class=\\\"image-preview\\\">\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"image\\\"> \\n            <img *ngFor='let url of urls'  [src]=\\\"url\\\" height=\\\"200\\\"> <br/>\\n\\n\\n\\n\\n      </div>\\n        <div> \\n        <button  type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Select Image</button> \\n        <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\" multiple>\\n            <input type='file' (change)=\\\"onImagePicked($event)\\\" multiple>\\n        </div>\\n\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Save Image</button>\\n    </form> -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onSaveImage()\\\">\\n   \\n    <input type=\\\"file\\\" class=\\\"custom-file-input form-control\\\" id=\\\"files\\\" multiple (change)=\\\"onImagePicked($event)\\\"\\n        accept=\\\".png,.jpeg,.jpg\\\">\\n   \\n    <div class=\\\"images-preview mt-2\\\" *ngIf=\\\"photos.length\\\">\\n        <div formArrayName=\\\"photos\\\" *ngFor=\\\"let photo of photos.controls; let i = index;\\\">\\n            <div [formGroupName]=\\\"i\\\">\\n                <img [src]=\\\"photo.controls.url.value\\\" class=\\\"card-img-top\\\" alt=\\\"Image Preview\\\" height=\\\"200\\\">\\n                <button color=\\\"warn\\\" (click)=\\\"removeImage(i)\\\">DELETE</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div>\\n    <button color=\\\"accent\\\" type=\\\"submit\\\">Save Image</button>\\n</div>\\n</form>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostImageComponent } from './post-image/post-image.component';\nimport { ListImageComponent } from './list-image/list-image.component';\n\n\nconst routes: Routes = [\n\n  { path: \"newimage\", component: PostImageComponent },\n  { path: \"\", component: ListImageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServiceService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  postImage(imageObj:{}) {\n    //console.log('Fac', imageObj);\n    return this.httpClient.post(this.baseUrl + '/image/', imageObj);\n  }\n\n  getImages(){\n    return this.httpClient.get<any[]>(this.baseUrl + '/image/');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'imagica';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostImageComponent } from './post-image/post-image.component';\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  \n} from \"@angular/material\";\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppServiceService } from './app-service.service';\nimport { ListImageComponent } from './list-image/list-image.component';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { HeaderComponent } from './header/header.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostImageComponent,\n    ListImageComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    HttpClientModule,\n    MatToolbarModule\n    \n  ],\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n  MatToolbarModule\n    \n  ],\n  providers: [AppServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"ul {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n}\\n\\n.spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQWM7VUFBZCxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnNwYWNlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuIl19 */\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {}\n","module.exports = \".post-image {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC1pbWFnZS9saXN0LWltYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9saXN0LWltYWdlL2xpc3QtaW1hZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3N0LWltYWdlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppServiceService } from '../app-service.service';\n\n@Component({\n  selector: 'app-list-image',\n  templateUrl: './list-image.component.html',\n  styleUrls: ['./list-image.component.css']\n})\nexport class ListImageComponent implements OnInit {\n\n  imageList:Array<any>=[];\n  constructor(private appService:AppServiceService) { }\n\n  ngOnInit() {\n    this.getImages();\n  }\n\n  getImages(){\n    this.appService.getImages().subscribe((res)=>{\n      if(res.length>0){\n        for(let i=0;i<res.length;i++){\n          for(let j=0;j<res[i]['photos'].length;j++){\n        this.imageList.push(res[i]['photos'][j].url);\n        }\n      }\n      }\n    });\n  }\n}\n","module.exports = \"/* input[type=\\\"file\\\"] {\\r\\n    visibility: hidden;\\r\\n  } */\\r\\n  \\r\\n  .image-preview {\\r\\n    height: 5rem;\\r\\n    margin: 1rem 0;\\r\\n  }\\r\\n  \\r\\n  .image-preview img {\\r\\n    height: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC1pbWFnZS9wb3N0LWltYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0tBRUs7O0VBRUg7SUFDRSxZQUFZO0lBQ1osY0FBYztFQUNoQjs7RUFFQTtJQUNFLFlBQVk7RUFDZCIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtaW1hZ2UvcG9zdC1pbWFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIH0gKi9cclxuICBcclxuICAuaW1hZ2UtcHJldmlldyB7XHJcbiAgICBoZWlnaHQ6IDVyZW07XHJcbiAgICBtYXJnaW46IDFyZW0gMDtcclxuICB9XHJcbiAgXHJcbiAgLmltYWdlLXByZXZpZXcgaW1nIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { AppServiceService } from '../app-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-post-image',\n  templateUrl: './post-image.component.html',\n  styleUrls: ['./post-image.component.css']\n})\nexport class PostImageComponent implements OnInit {\n  form: FormGroup;\n  imagePreview: string;\n  urls = [];\n  constructor(private formBuilder: FormBuilder, private appService:AppServiceService,private router: Router) { }\n\n  ngOnInit() {\n\n    this.form = this.formBuilder.group({\n      photos: this.formBuilder.array([],Validators.required)\n    });\n  }\n  createItem(data): FormGroup {\n    return this.formBuilder.group(data);\n}\n  get photos(): FormArray {\n    return this.form.get('photos') as FormArray;\n};\n  \n  onImagePicked(event) {\n   \n    if (event.target.files && event.target.files[0]) {\n      var filesAmount = event.target.files.length;\n      for (let i = 0; i < filesAmount; i++) {\n        /* [to-Do] Check for image extension is jpeg,png,jpg */\n        /***\n         * \n         * \n         */\n\n        //  Get URL and push to array\n          let file =event.target.files[i];\n          var reader = new FileReader();\n          console.log(event.target.files[i].type);  \n          reader.onload = (event: any) => {\n            \n           // this.urls.push(event.target.result);\n           this.photos.push(this.createItem({\n        \n            url: event.target.result  //Base64 string for preview image\n        }));\n            \n          }\n  \n          reader.readAsDataURL(event.target.files[i]);\n        // }\n        \n      }\n    }\n  }\n\n  removeImage(index){\n    this.photos.removeAt(index);\n  }\n  onSaveImage(){\n    if (this.form.invalid) {\n      console.log(\"in invalid form\");\n      return;\n    }else{\n      console.log(\"form==>\", this.form.value);\n      this.appService.postImage(this.form.value).subscribe((res)=>{\n        if(res){\n          this.router.navigate(['/']);\n        }\n        \n      });\n    }\n this.form.reset();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}